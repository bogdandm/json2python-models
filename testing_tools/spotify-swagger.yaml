swagger: '2.0'
schemes:
  - https
host: api.spotify.com
basePath: /v1
info:
  title: Spotify
  version: v1
  x-apisguru-categories:
    - media
  x-origin:
    - format: raml
      url: 'https://raw.githubusercontent.com/spotify/web-api/master/specifications/raml/api.raml'
      version: '0.8'
  x-providerName: spotify.com
  x-logo:
    url: https://logo-core.clearbit.com/spotify.com
externalDocs:
  url: 'https://developer.spotify.com/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth_2_0_accessCode:
    authorizationUrl: 'https://accounts.spotify.com/authorize'
    description: |
      Spotify supports OAuth 2.0 for authenticating all API requests.
    flow: accessCode
    scopes:
      playlist-modify-private: ''
      playlist-modify-public: ''
      playlist-read-collaborative: ''
      playlist-read-private: ''
      user-follow-modify: ''
      user-follow-read: ''
      user-library-modify: ''
      user-library-read: ''
      user-read-birthdate: ''
      user-read-email: ''
      user-read-private: ''
    tokenUrl: 'https://accounts.spotify.com/api/token'
    type: oauth2
  oauth_2_0_implicit:
    authorizationUrl: 'https://accounts.spotify.com/authorize'
    description: |
      Spotify supports OAuth 2.0 for authenticating all API requests.
    flow: implicit
    scopes:
      playlist-modify-private: ''
      playlist-modify-public: ''
      playlist-read-collaborative: ''
      playlist-read-private: ''
      user-follow-modify: ''
      user-follow-read: ''
      user-library-modify: ''
      user-library-read: ''
      user-read-birthdate: ''
      user-read-email: ''
      user-read-private: ''
    type: oauth2
paths:
  /albums:
    get:
      description: |
        [Get Several Albums](https://developer.spotify.com/web-api/get-several-albums/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              albums:
                items:
                  $ref: '#/definitions/album'
                type: array
            type: object
  '/albums/{id}':
    get:
      description: |
        [Get an Album](https://developer.spotify.com/web-api/get-album/)
      parameters:
        - description: The Spotify ID for the album
          in: path
          name: id
          required: true
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/album'
  '/albums/{id}/tracks':
    get:
      description: |
        [Get an Album's Tracks](https://developer.spotify.com/web-api/get-albums-tracks/)
      parameters:
        - description: The Spotify ID for the album
          in: path
          name: id
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/track-simple-page'
  /artists:
    get:
      description: |
        [Get Several Artists](https://developer.spotify.com/web-api/get-several-artists/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              artists:
                items:
                  $ref: '#/definitions/artist'
                type: array
            type: object
  '/artists/{id}':
    get:
      description: |
        [Get an Artist](https://developer.spotify.com/web-api/get-artist/)
      parameters:
        - description: The Spotify ID for the artist
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/artist'
  '/artists/{id}/albums':
    get:
      description: |
        [Get an Artist's Albums](https://developer.spotify.com/web-api/get-artists-albums/)
      parameters:
        - description: The Spotify ID for the artist
          in: path
          name: id
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: Filter by album types
          in: query
          name: album_type
          required: false
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/album-simple-page'
  '/artists/{id}/related-artists':
    get:
      description: |
        [Get an Artist's Related Artists](https://developer.spotify.com/web-api/get-related-artists/)
      parameters:
        - description: The Spotify ID for the artist
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              artists:
                items:
                  $ref: '#/definitions/artist'
                type: array
            type: object
  '/artists/{id}/top-tracks':
    get:
      description: |
        [Get an Artist's Top Tracks](https://developer.spotify.com/web-api/get-artists-top-tracks/)
      parameters:
        - description: The Spotify ID for the artist
          in: path
          name: id
          required: true
          type: string
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              tracks:
                items:
                  $ref: '#/definitions/track'
                type: array
            type: object
  /browse/categories:
    get:
      description: |
        [Get a List of Browse Categories](https://developer.spotify.com/web-api/get-list-categories/)
      parameters:
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: false
          type: string
        - description: |
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
          in: query
          name: locale
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/category-page'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  '/browse/categories/{category_id}':
    get:
      description: |
        [Get a Single Browse Category](https://developer.spotify.com/web-api/get-category/)
      parameters:
        - description: The Spotify ID of the category you wish to fetch.
          in: path
          name: category_id
          required: true
          type: string
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: false
          type: string
        - description: |
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
          in: query
          name: locale
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/category'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  '/browse/categories/{category_id}/playlists':
    get:
      description: |
        [Get a Category's playlists](https://developer.spotify.com/web-api/get-categorys-playlists/)
      parameters:
        - description: The Spotify ID of the category you wish to fetch.
          in: path
          name: category_id
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              playlists:
                $ref: '#/definitions/playlist-simple-page'
            type: object
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /browse/featured-playlists:
    get:
      description: |
        [Get a List of Featured Playlists](https://developer.spotify.com/web-api/get-list-featured-playlists/)
      parameters:
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: false
          type: string
        - description: |
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
          in: query
          name: locale
          required: false
          type: string
        - description: |
            A timestamp in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss) with the user's local time to get results tailored to a specific date and time in the day. If not provided, it defaults to the current UTC time. Example: "2014-10-23T09:00:00" for a user whose local time is 9AM.
          in: query
          name: timestamp
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/featured-playlists'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /browse/new-releases:
    get:
      description: |
        [Get a List of New Releases](https://developer.spotify.com/web-api/get-list-new-releases/)
      parameters:
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The country (an ISO 3166-1 alpha-2 country code)
          in: query
          name: country
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/album-simple-page'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /me:
    get:
      description: |
        [Get Current User's Profile](https://developer.spotify.com/web-api/get-current-users-profile/)
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/current-user-profile'
  /me/following:
    delete:
      description: |
        [Unfollow Artists or Users](https://developer.spotify.com/web-api/unfollow-artists-users/)
      parameters:
        - description: The type to unfollow.
          enum:
            - artist
            - user
          in: query
          name: type
          required: true
          type: string
        - description: A comma-separated list of the artists or users ids
          in: query
          name: ids
          required: true
          type: string
      responses:
        '204':
          description: No Content
    get:
      description: |
        [Get User's Followed Artists](https://developer.spotify.com/web-api/get-followed-artists/)
      parameters:
        - description: 'The ID type, currently only artist is supported.'
          enum:
            - artist
          in: query
          name: type
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - description: The last artist ID retrieved from the previous request.
          in: query
          name: after
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user-followed'
    put:
      description: |
        [Follow Artists or Users](https://developer.spotify.com/web-api/follow-artists-users/)
      parameters:
        - description: The type to follow.
          enum:
            - artist
            - user
          in: query
          name: type
          required: true
          type: string
        - description: A comma-separated list of the artists or users ids
          in: query
          name: ids
          required: true
          type: string
      responses:
        '204':
          description: No Content
  /me/following/contains:
    get:
      description: |
        [Check if Current User Follows Artists or Users](https://developer.spotify.com/web-api/check-current-user-follows/)
      parameters:
        - description: The type to follow.
          enum:
            - artist
            - user
          in: query
          name: type
          required: true
          type: string
        - description: A comma-separated string of the artists or users ids.
          in: query
          name: ids
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              description: 'True if the user follows the artist/user, false otherwise'
              type: boolean
            type: array
  /me/tracks:
    delete:
      description: |
        [Remove Tracks for Current User](https://developer.spotify.com/web-api/remove-tracks-user/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    get:
      description: |
        [Get Current User's Saved Tracks](https://developer.spotify.com/web-api/get-users-saved-tracks/)
      parameters:
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/saved-track-page'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    put:
      description: |
        [Save Tracks for Current User](https://developer.spotify.com/web-api/save-tracks-user/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /me/tracks/contains:
    get:
      description: |
        [Check Current User's Saved Tracks](https://developer.spotify.com/web-api/check-users-saved-tracks/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              description: 'True if the track is in user''s Your Music library, false otherwise'
              type: boolean
            type: array
  /search:
    get:
      description: |
        [Search for an Item](https://developer.spotify.com/web-api/search-item/)
      parameters:
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: 'The search query''s keywords (and optional field filters). The search is not case-sensitive: ''roadhouse'' will match ''Roadhouse'', ''roadHouse'', etc. Keywords will be matched in any order unless surrounded by quotes, thus q=roadhouse&20blues will match both ''Blues Roadhouse'' and ''Roadhouse of the Blues''. Quotation marks can be used to limit the match to a phrase: q=roadhouse&20blues will match ''My Roadhouse Blues'' but not ''Roadhouse of the Blues''. By default, results are returned when a match is found in any field of the target object type. Searches can be made more specific by specifying an album, artist or track field filter. For example q=album:gold%20artist:abba&type=album will search for albums with the text ''gold'' in the album name and the text ''abba'' in an artist name. Other possible field filters, depending on object types being searched, include year, genre, upc, and isrc. For example, q=damian%20genre:reggae-pop&type=artist. The asterisk (*) character can, with some limitations, be used as a wildcard (maximum: 2 per query). It will match a variable number of non-white-space characters. It cannot be used in a quoted phrase, in a field filter, or as the first character of the keyword string. Searching for playlists will return results matching the playlist''s name and/or description.'
          in: query
          name: q
          required: true
          type: string
        - description: 'A comma-separated list of item types to search across. Search results will include hits from all the specified item types; for example q=name:abacab&type=album,track will return both albums and tracks with "abacab" in their name.'
          in: query
          name: type
          required: true
          type: string
        - description: 'The market (an ISO 3166-1 alpha-2 country code).  If given, only items with content playable in that market will be returned.'
          in: query
          name: market
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/search'
  /tracks:
    get:
      description: |
        [Get Several Tracks](https://developer.spotify.com/web-api/get-several-tracks/)
      parameters:
        - description: A comma-separated list of IDs
          in: query
          name: ids
          required: true
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              tracks:
                items:
                  $ref: '#/definitions/track'
                type: array
            type: object
  '/tracks/{id}':
    get:
      description: |
        [Get a Track](https://developer.spotify.com/web-api/get-track/)
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/track'
  '/users/{user_id}':
    get:
      description: |
        [Get a User's Profile](https://developer.spotify.com/web-api/get-users-profile/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user-profile'
  '/users/{user_id}/playlists':
    get:
      description: |
        [Get a List of a User's Playlists](https://developer.spotify.com/web-api/get-list-users-playlists/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist-simple-page'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    post:
      description: |
        [Create a Playlist](https://developer.spotify.com/web-api/create-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              name:
                type: string
              public:
                type: boolean
            required:
              - name
            type: object
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/playlist'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  '/users/{user_id}/playlists/{playlist_id}':
    get:
      description: |
        [Get a Playlist](https://developer.spotify.com/web-api/get-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: A comma-separated list of fields to filter query
          in: query
          name: fields
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    put:
      description: |
        [Change a Playlist's Details](https://developer.spotify.com/web-api/change-playlist-details/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              name:
                type: string
              public:
                type: boolean
            type: object
      produces:
        - text/plain
      responses:
        '200':
          description: OK
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  '/users/{user_id}/playlists/{playlist_id}/followers':
    delete:
      description: |
        [Unfollow a Playlist](https://developer.spotify.com/web-api/unfollow-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
    put:
      description: |
        [Follow a Playlist](https://developer.spotify.com/web-api/follow-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              public:
                type: boolean
            type: object
      produces:
        - text/plain
      responses:
        '200':
          description: OK
  '/users/{user_id}/playlists/{playlist_id}/followers/contains':
    get:
      description: |
        [Check if Users Follow a Playlist](https://developer.spotify.com/web-api/check-user-following-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: A comma-separated list of users ids
          in: query
          name: ids
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              description: 'True if the user follows the playlist, false otherwise'
              type: boolean
            type: array
  '/users/{user_id}/playlists/{playlist_id}/tracks':
    delete:
      description: |
        [Remove Tracks from a Playlist](https://developer.spotify.com/web-api/remove-tracks-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              tracks:
                items: {}
                type: array
            required:
              - tracks
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist-snapshot'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    get:
      description: |
        [Get a Playlist's Tracks](https://developer.spotify.com/web-api/get-playlists-tracks/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - default: 20
          description: The maximum number of items to return
          in: query
          maximum: 50
          minimum: 0
          name: limit
          required: false
          type: integer
        - default: 0
          description: The index of the first item to return
          in: query
          name: offset
          required: false
          type: integer
        - description: A comma-separated list of fields to filter query
          in: query
          name: fields
          type: string
        - description: The market (an ISO 3166-1 alpha-2 country code)
          in: query
          name: market
          required: false
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist-track-page'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    post:
      description: |
        [Add Tracks to a Playlist](https://developer.spotify.com/web-api/add-tracks-to-playlist/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: 'The position to insert the tracks, a zero-based index'
          in: query
          name: position
          required: false
          type: integer
        - description: A comma-separated list of Spotify track URIs to add. A maximum of 100 tracks can be added in one request.
          in: query
          name: uris
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist-snapshot'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    put:
      description: |
        [Reorder or replace a Playlist's Tracks](https://developer.spotify.com/web-api/reorder-playlists-tracks/)
      parameters:
        - description: The user's Spotify user ID.
          in: path
          name: user_id
          required: true
          type: string
        - description: The Spotify playlist ID.
          in: path
          name: playlist_id
          required: true
          type: string
        - description: It is used to set specified media type.
          in: header
          name: Accept
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              uris:
                items: {}
                type: array
            required:
              - uris
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/playlist-snapshot'
        '429':
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
definitions:
  album:
    properties:
      album_type:
        description: 'The type of the album: one of ''album'', ''single'', or ''compilation''.'
        type: string
      artists:
        description: The artists of the album. Each artist object includes a link in href to more detailed information about the artist.
        items:
          $ref: '#/definitions/artist'
        type: array
      available_markets:
        description: 'The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market.'
        items:
          type: string
        type: array
      copyrights:
        description: The copyright statements of the album.
        items:
          properties:
            text:
              description: The copyright text for this album.
              type: string
            type:
              description: 'The type of copyright: C = the copyright, P = the sound recording (performance) copyright.'
              type: string
          type: object
        type: array
      external_ids:
        additionalProperties:
          description: 'The identifier type, for example: ''isrc'' - International Standard Recording Code, ''ean'' - International Article Number, ''upc'' - Universal Product Code'
          type: string
        description: Known external IDs for this album.
        type: object
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this album.
        type: object
      genres:
        description: 'A list of the genres used to classify the album. For example: ''Prog Rock'', ''Post-Grunge''. (If not yet classified, the array is empty.)'
        items:
          type: string
        type: array
      href:
        description: A link to the Web API endpoint providing full details of the album.
        type: string
      id:
        description: The Spotify ID for the album.
        type: string
      images:
        description: 'The cover art for the album in various sizes, widest first.'
        items:
          $ref: '#/definitions/image'
        type: array
      name:
        description: The name of the album.
        type: string
      popularity:
        description: 'The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated from the popularity of the album''s individual tracks.'
        type: integer
      release_date:
        description: 'The date the album was first released, for example ''1981-12-15''. Depending on the precision, it might be shown as ''1981'' or ''1981-12''.'
        type: string
      release_date_precision:
        description: 'The precision with which release_date value is known: ''year'', ''month'', or ''day''.'
        type: string
      tracks:
        $ref: '#/definitions/track-simple-page'
      type:
        description: 'The object type: ''album''.'
        type: string
      uri:
        description: The Spotify URI for the album.
        type: string
    type: object
  album-simple:
    properties:
      album_type:
        description: 'The type of the album: one of ''album'', ''single'', or ''compilation''.'
        type: string
      available_markets:
        description: 'The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market.'
        items:
          type: string
        type: array
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this album.
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the album.
        type: string
      id:
        description: The Spotify ID for the album.
        type: string
      images:
        description: 'The cover art for the album in various sizes, widest first.'
        items:
          $ref: '#/definitions/image'
        type: array
      name:
        description: The name of the album.
        type: string
      type:
        description: 'The object type: ''album''.'
        type: string
      uri:
        description: The Spotify URI for the album.
        type: string
    type: object
  album-simple-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/album-simple'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  album-track-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/track-simple'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  artist:
    properties:
      external_urls:
        additionalProperties:
          type: string
        description: Known external URLs for this artist.
        type: object
      followers:
        $ref: '#/definitions/followers'
      genres:
        description: 'A list of the genres the artist is associated with. For example: ''Prog Rock'', ''Post-Grunge''. (If not yet classified, the array is empty.)'
        items:
          type: string
        type: array
      href:
        description: A link to the Web API endpoint providing full details of the artist.
        type: string
      id:
        description: The Spotify ID for the artist.
        type: string
      images:
        description: 'Images of the artist in various sizes, widest first.'
        items:
          $ref: '#/definitions/image'
        type: array
      name:
        description: The name of the artist.
        type: string
      popularity:
        description: 'The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist''s popularity is calculated from the popularity of all the artist''s tracks.'
        type: integer
      type:
        description: 'The object type: ''artist'''
        type: string
      uri:
        description: The Spotify URI for the artist.
        type: string
    type: object
  artist-simple:
    properties:
      external_urls:
        additionalProperties:
          type: string
        description: Known external URLs for this artist.
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the artist.
        type: string
      id:
        description: The Spotify ID for the artist.
        type: string
      name:
        description: The name of the artist.
        type: string
      type:
        description: 'The object type: ''artist'''
        type: string
      uri:
        description: The Spotify URI for the artist.
        type: string
    type: object
  category:
    properties:
      href:
        description: A link to the Web API endpoint returning full details of the category.
        type: string
      icons:
        items:
          $ref: '#/definitions/image'
        type: array
      id:
        description: The Spotify category ID of the category.
        type: string
      name:
        description: The name of the category.
        type: string
    type: object
  category-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/category'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  current-user-profile:
    properties:
      birthdate:
        description: The user's date-of-birth. This field is only available when the current user has granted access to the user-read-birthdate scope.
        type: string
      country:
        description: 'The country of the user, as set in the user''s account profile. An ISO 3166-1 alpha-2 country code. This field is only available when the current user has granted access to the user-read-private scope.'
        type: string
      displayName:
        description: The name displayed on the user's profile.
        type: string
      email:
        description: 'The user''s email address, as entered by the user when creating their account. This email address is unverified; there is no proof that it actually belongs to the user. This field is only available when the current user has granted access to the user-read-email scope.'
        type: string
      external_urls:
        additionalProperties:
          type: string
        description: Known external URLs for this user.
        type: object
      followers:
        $ref: '#/definitions/followers'
      href:
        description: A link to the Web API endpoint for this user.
        type: string
      id:
        description: The Spotify ID for this user.
        type: string
      product:
        description: 'The user''s Spotify subscription level: ''premium'', ''free'', etc. (The subscription level ''open'' can be considered the same as ''free''.) This field is only available when the current user has granted access to the user-read-private scope.'
        type: string
      type:
        description: 'The object type: ''user'''
        type: string
      uri:
        description: The Spotify URI for the user.
        type: string
    type: object
  featured-playlists:
    properties:
      message:
        description: A sentence describing the context for the featured playlists.
        type: string
      playlists:
        $ref: '#/definitions/playlist-simple-page'
    type: object
  followers:
    description: Information about the followers of the artist.
    properties:
      href:
        description: A link to the Web API endpoint providing full details of the followers; null if not available.
        type: string
      total:
        description: The total number of followers.
        type: integer
    type: object
  image:
    properties:
      height:
        description: 'The image height in pixels. If unknown: null or not returned.'
        type: integer
      url:
        description: The source URL of the image.
        type: string
      width:
        description: 'The image width in pixels. If unknown: null or not returned.'
        type: integer
    type: object
  playlist:
    properties:
      collaborative:
        description: True if the owner allows other users to modify the playlist.
        type: boolean
      description:
        description: 'The playlist description. Only returned for modified, verified playlists, otherwise null.'
        type: string
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this album.
        type: object
      followers:
        description: Information about the followers of the playlist.
        properties:
          href:
            description: A link to the Web API endpoint providing full details of the followers; null if not available.
            type: string
          total:
            description: The total number of followers.
            type: integer
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the playlist.
        type: string
      id:
        description: The Spotify ID of the playlist.
        type: string
      images:
        description: 'The cover art for the album in various sizes, widest first.'
        items:
          $ref: '#/definitions/image'
        type: array
      name:
        description: The name of the playlist.
        type: string
      owner:
        $ref: '#/definitions/user-profile'
      public:
        description: 'The playlist''s public/private status: true the playlist is public, false the playlist is private, null the playlist status is not relevant. For more about public/private status, see Working with Playlists.'
        type: boolean
      snapshot_id:
        description: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version
        type: string
      tracks:
        $ref: '#/definitions/playlist-track-page'
      type:
        description: 'The object type: ''playlist''.'
        type: string
      uri:
        description: Spotify URI of the playlist.
        type: string
    type: object
  playlist-simple:
    properties:
      collaborative:
        description: True if the owner allows other users to modify the playlist.
        type: boolean
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this album.
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the playlist.
        type: string
      id:
        description: The Spotify ID of the playlist.
        type: string
      images:
        description: 'The cover art for the album in various sizes, widest first.'
        items:
          $ref: '#/definitions/image'
        type: array
      name:
        description: The name of the playlist.
        type: string
      owner:
        $ref: '#/definitions/user-profile'
      public:
        description: 'The playlist''s public/private status: true the playlist is public, false the playlist is private, null the playlist status is not relevant. For more about public/private status, see Working with Playlists.'
        type: boolean
      snapshot_id:
        description: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version
        type: string
      tracks:
        properties:
          href:
            description: A link to the Web API endpoint returning the full result of the request.
            type: string
          total:
            description: The total number of tracks available to return.
            type: integer
        type: object
      type:
        description: 'The object type: ''playlist''.'
        type: string
      uri:
        description: Spotify URI of the playlist.
        type: string
    type: object
  playlist-simple-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/playlist-simple'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  playlist-snapshot:
    properties:
      snapshot_id:
        description: The version identifier for the modified playlist. Can be supplied in other requests to target a specific playlist version.
        type: string
    type: object
  playlist-track:
    properties:
      added_at:
        description: The date and time the track was added in ISO 8601 format. Note that some very old playlists may return null in this field.
        type: string
      added_by:
        $ref: '#/definitions/user-profile'
      is_local:
        description: 'Whether this track is a [local file](https://developer.spotify.com/web-api/local-files-spotify-playlists/) or not.'
        type: boolean
      track:
        $ref: '#/definitions/track'
    type: object
  playlist-track-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/playlist-track'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  saved-track:
    properties:
      added_at:
        description: The date and time the track was added in ISO 8601 format. Note that some very old playlists may return null in this field.
        type: string
      track:
        $ref: '#/definitions/track'
    type: object
  saved-track-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/saved-track'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  search:
    properties:
      albums:
        description: Present if the type of search includes 'album'.
        properties:
          href:
            description: A link to the Web API endpoint returning the full result of the request.
            type: string
          items:
            description: The requested data.
            items:
              $ref: '#/definitions/album-simple'
            type: array
          limit:
            description: The maximum number of items in the response (as set in the query or by default).
            type: integer
          next:
            description: URL to the next page of items. (null if none)
            type: string
          offset:
            description: The offset of the items returned (as set in the query or by default).
            type: integer
          previous:
            description: URL to the previous page of items. (null if none)
            type: string
          total:
            description: The total number of items available to return.
            type: integer
        type: object
      artists:
        description: Present if the type of search includes 'artist'.
        properties:
          href:
            description: A link to the Web API endpoint returning the full result of the request.
            type: string
          items:
            description: The requested data.
            items:
              $ref: '#/definitions/artist'
            type: array
          limit:
            description: The maximum number of items in the response (as set in the query or by default).
            type: integer
          next:
            description: URL to the next page of items. (null if none)
            type: string
          offset:
            description: The offset of the items returned (as set in the query or by default).
            type: integer
          previous:
            description: URL to the previous page of items. (null if none)
            type: string
          total:
            description: The total number of items available to return.
            type: integer
        type: object
      tracks:
        description: Present if the type of search includes 'track'.
        properties:
          href:
            description: A link to the Web API endpoint returning the full result of the request.
            type: string
          items:
            description: The requested data.
            items:
              $ref: '#/definitions/track'
            type: array
          limit:
            description: The maximum number of items in the response (as set in the query or by default).
            type: integer
          next:
            description: URL to the next page of items. (null if none)
            type: string
          offset:
            description: The offset of the items returned (as set in the query or by default).
            type: integer
          previous:
            description: URL to the previous page of items. (null if none)
            type: string
          total:
            description: The total number of items available to return.
            type: integer
        type: object
    type: object
  track:
    properties:
      album:
        $ref: '#/definitions/album-simple'
      artists:
        description: The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
        items:
          $ref: '#/definitions/artist-simple'
        type: array
      available_markets:
        description: 'A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code. '
        items:
          type: string
        type: array
      disc_number:
        description: The disc number (usually 1 unless the album consists of more than one disc).
        type: integer
      duration_ms:
        description: The track length in milliseconds.
        type: integer
      explicit:
        description: Whether or not the track has explicit lyrics (true = yes it does; false = no it does not OR unknown).
        type: boolean
      external_ids:
        additionalProperties:
          description: 'The identifier type, for example: ''isrc'' - International Standard Recording Code, ''ean'' - International Article Number, ''upc'' - Universal Product Code'
          type: string
        description: Known external IDs for the track.
        type: object
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this track.
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the track.
        type: string
      id:
        description: The Spotify ID for the track.
        type: string
      is_playable:
        description: 'Part of the response when Track Relinking is applied. If true, the track is playable in the given market. Otherwise false.'
        type: boolean
      linked_from:
        description: 'Part of the response when Track Relinking is applied, and the requested track has been replaced with different track. The track in the linked_from object contains information about the originally requested track.'
        properties:
          external_urls:
            additionalProperties:
              description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
              type: string
            description: Known external URLs for this track.
            type: object
          href:
            description: A link to the Web API endpoint providing full details of the track.
            type: string
          id:
            description: The Spotify ID for the track.
            type: string
          type:
            description: 'The object type: ''track''.'
            type: string
          uri:
            description: The Spotify URI for the track.
            type: string
        type: object
      name:
        description: The name of the track.
        type: string
      preview_url:
        description: A URL to a 30 second preview (MP3 format) of the track.
        type: string
      track_number:
        description: 'The number of the track. If an album has several discs, the track number is the number on the specified disc.'
        type: integer
      type:
        description: 'The object type: ''track''.'
        type: string
      uri:
        description: The Spotify URI for the track.
        type: string
    type: object
  track-simple:
    properties:
      artists:
        description: The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
        items:
          $ref: '#/definitions/artist-simple'
        type: array
      available_markets:
        description: 'A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code. '
        items:
          type: string
        type: array
      disc_number:
        description: The disc number (usually 1 unless the album consists of more than one disc).
        type: integer
      duration_ms:
        description: The track length in milliseconds.
        type: integer
      explicit:
        description: Whether or not the track has explicit lyrics (true = yes it does; false = no it does not OR unknown).
        type: boolean
      external_urls:
        additionalProperties:
          description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
          type: string
        description: Known external URLs for this track.
        type: object
      href:
        description: A link to the Web API endpoint providing full details of the track.
        type: string
      id:
        description: The Spotify ID for the track.
        type: string
      is_playable:
        description: 'Part of the response when Track Relinking is applied. If true, the track is playable in the given market. Otherwise false.'
        type: boolean
      linked_from:
        description: 'Part of the response when Track Relinking is applied, and the requested track has been replaced with different track. The track in the linked_from object contains information about the originally requested track.'
        properties:
          external_urls:
            additionalProperties:
              description: 'The type of the URL, for example: ''spotify'' - The Spotify URL for the object.'
              type: string
            description: Known external URLs for this track.
            type: object
          href:
            description: A link to the Web API endpoint providing full details of the track.
            type: string
          id:
            description: The Spotify ID for the track.
            type: string
          type:
            description: 'The object type: ''track''.'
            type: string
          uri:
            description: The Spotify URI for the track.
            type: string
        type: object
      name:
        description: The name of the track.
        type: string
      preview_url:
        description: A URL to a 30 second preview (MP3 format) of the track.
        type: string
      track_number:
        description: 'The number of the track. If an album has several discs, the track number is the number on the specified disc.'
        type: integer
      type:
        description: 'The object type: ''track''.'
        type: string
      uri:
        description: The Spotify URI for the track.
        type: string
    type: object
  track-simple-page:
    properties:
      href:
        description: A link to the Web API endpoint returning the full result of the request.
        type: string
      items:
        description: The requested data.
        items:
          $ref: '#/definitions/track-simple'
        type: array
      limit:
        description: The maximum number of items in the response (as set in the query or by default).
        type: integer
      next:
        description: URL to the next page of items. (null if none)
        type: string
      offset:
        description: The offset of the items returned (as set in the query or by default).
        type: integer
      previous:
        description: URL to the previous page of items. (null if none)
        type: string
      total:
        description: The total number of items available to return.
        type: integer
    type: object
  user-followed:
    properties:
      artists:
        description: Present if the type of followe items is 'artist'.
        properties:
          cursor:
            description: The cursors used to find the next set of items.
            properties:
              after:
                description: The cursor to use as key to find the next page of items.
                type: string
            type: object
          href:
            description: A link to the Web API endpoint returning the full result of the request.
            type: string
          items:
            description: The requested data.
            items:
              $ref: '#/definitions/artist'
            type: array
          limit:
            description: The maximum number of items in the response (as set in the query or by default).
            type: integer
          next:
            description: URL to the next page of items. (null if none)
            type: string
          total:
            description: The total number of items available to return.
            type: integer
        type: object
    type: object
  user-profile:
    properties:
      displayName:
        description: The name displayed on the user's profile.
        type: string
      external_urls:
        additionalProperties:
          type: string
        description: Known external URLs for this user.
        type: object
      followers:
        $ref: '#/definitions/followers'
      href:
        description: A link to the Web API endpoint for this user.
        type: string
      id:
        description: The Spotify ID for this user.
        type: string
      type:
        description: 'The object type: ''user'''
        type: string
      uri:
        description: The Spotify URI for the user.
        type: string
    type: object
